{"version":3,"sources":["./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/events/events.component.html","./src/app/events/events.component.ts","./src/app/token-interceptor.service.ts","./src/environments/environment.ts","./src/app/event.service.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/special/special.component.ts","./src/app/special/special.component.html","./src/app/app.module.ts","./src/app/auth.service.ts","./src/app/auth.guard.ts","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASO,MAAM,iBAAiB;IAO5B,YAAoB,IAAiB,EAAU,MAAc;QAAzC,SAAI,GAAJ,IAAI,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QAN7D,kBAAa,GAAG,UAAU,CAAC;QAC3B,qBAAgB,GAAG;YACjB,IAAI,EAAE,EAAE;YACR,KAAK,EAAE,EAAE;YACT,QAAQ,EAAE,EAAE;SACb,CAAC;IAC8D,CAAC;IAEjE,QAAQ,KAAU,CAAC;IAEnB,YAAY;QACV,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,SAAS,CACrD,CAAC,GAAQ,EAAE,EAAE;YACX,OAAO,CAAC,GAAG,CAAC,GAAG,GAAG,kBAAkB,CAAC,CAAC;YACtC,YAAY,CAAC,OAAO,CAAC,OAAO,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC;YACzC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;QACrC,CAAC,EACD,CAAC,GAAW,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAClC,CAAC;IACJ,CAAC;;kFApBU,iBAAiB;iGAAjB,iBAAiB;QCT9B,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,0EAAmD;QAAA,uDAAiB;QAAA,4DAAO;QAC3E,0EACA;QAAA,yEACE;QAAA,yEACE;QAAA,2EAEA;QAFO,oMAAmC;QAA1C,4DAEA;QAAA,4EAAkB;QAAA,gEAAI;QAAA,4DAAQ;QAChC,4DAAM;QAAA,4DAAM;QACZ,0EACE;QAAA,0EACE;QAAA,4EAEA;QAFO,sMAAoC;QAA3C,4DAEA;QAAA,6EAAmB;QAAA,iEAAK;QAAA,4DAAQ;QAClC,4DAAM;QACR,4DAAM;QACN,0EACE;QAAA,0EACE;QAAA,6EAEA;QAFO,yMAAuC;QAA9C,4DAEA;QAAA,6EAAsB;QAAA,oEAAQ;QAAA,4DAAQ;QACxC,4DAAM;QACR,4DAAM;QACR,4DAAO;QACD,4DAAM;QACd,2EACE;QAAA,8EAAoF;QAA5E,0IAAS,kBAAc,IAAC;QAAoD,mEACpF;QAAA,4DAAS;QACX,4DAAM;QACR,4DAAM;QACR,4DAAM;QACN,0EACE;QAAA,2EACE;QAAA,2EACE;QAAA,0EACE;QAAA,4EAAyB;QAAA,2EAAe;QAAA,4DAAO;QAC/C,sEACE;QAAA,sEAAI;QAAA,uFAA2B;QAAA,4DAAK;QACpC,sEAAI;QAAA,8FAAkC;QAAA,4DAAK;QAC3C,sEAAI;QAAA,0EAAc;QAAA,4DAAK;QACvB,sEAAI;QAAA,2EAAe;QAAA,4DAAK;QAC1B,4DAAK;QACP,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;;QA7CqD,0DAAiB;QAAjB,kFAAiB;QAIzD,0DAAmC;QAAnC,8FAAmC;QAMjC,0DAAoC;QAApC,+FAAoC;QAOpC,0DAAuC;QAAvC,kGAAuC;;;;;;;;;;;;;;;;;;;;;;;ICpB1D,yEACE;IAAA,yEACE;IAAA,yEACE;IAAA,0EAAyB;IAAA,uDAAiB;IAAA,4DAAO;IACjD,uEAAM;IAAA,uDAAiB;IAAA,4DAAO;IAEhC,0EACE;IAAA,uDACF;;IAAA,4DAAO;IAAA,4DAAM;IACb,0EACE;IAAA,wEAAiD;IAAA,gEAAI;IAAA,4DAAI;IAE3D,4DAAM;IACR,4DAAM;IACR,4DAAM;;;IAXyB,0DAAiB;IAAjB,+EAAiB;IACpC,0DAAiB;IAAjB,+EAAiB;IAGvB,0DACF;IADE,6KACF;;ACDC,MAAM,eAAe;IAQ1B,YAAoB,YAA0B;QAA1B,iBAAY,GAAZ,YAAY,CAAc;QAP9C,WAAM,GAAG;YACP;gBACE,KAAK,EAAE,EAAE;gBACT,KAAK,EAAE,EAAE;gBACT,UAAU,EAAE,EAAE;aACf;SACF,CAAC;IAC+C,CAAC;IAElD,QAAQ;QACN,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,CAAC,SAAS,CACrC,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,EAC5B,CAAC,GAAG,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAC1B,CAAC;IACJ,CAAC;;8EAfU,eAAe;+FAAf,eAAe;QDR5B,yEACE;QAAA,4GAcM;QACR,4DAAM;;QAfyC,0DAAS;QAAT,+EAAS;;;;;;;;;;;;;;AECxD;AAAA;AAAA;AAAA;AAA6C;;AAKtC,MAAM,uBAAuB;IAClC,YAAoB,QAAkB;QAAlB,aAAQ,GAAR,QAAQ,CAAU;IAAG,CAAC;IAE1C,SAAS,CACP,GAAwE,EACxE,IAAoC;QAEpC,MAAM,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,yDAAW,CAAC,CAAC;QACpD,MAAM,aAAa,GAAG,GAAG,CAAC,KAAK,CAAC;YAC9B,UAAU,EAAE;gBACV,aAAa,EAAE,UAAU,YAAY,CAAC,QAAQ,EAAE,EAAE;aACnD;SACF,CAAC,CAAC;QACH,OAAO,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;IACpC,CAAC;;8FAdU,uBAAuB;0GAAvB,uBAAuB,WAAvB,uBAAuB,mBAFtB,MAAM;;;;;;;;;;;;;ACLpB;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;;ACX5D,MAAM,YAAY;IAGvB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAF5B,aAAQ,GAAG,kCAAkC,CAAC;QAC9C,qBAAgB,GAAG,mCAAmC,CAAC;IACxB,CAAC;IAExC,SAAS;QACP,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC3C,CAAC;IAED,gBAAgB;QACd,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,IAAI,CAAC,gBAAgB,CAAC,CAAC;IACnD,CAAC;;wEAXU,YAAY;+FAAZ,YAAY,WAAZ,YAAY;;;;;;;;;;;;;;;;;;;;;;;;ICKV,wEAAiF;IAAA,gEAAK;IAAA,4DAAI;;;IAC/F,wEAAoF;IAAA,mEAAQ;IAAA,4DAAI;;;;IAC9F,wEAAqE;IAAnC,oRAAS,+BAAwB,IAAC;IAAC,iEAAM;IAAA,4DAAI;;ACHpF,MAAM,YAAY;IAGvB,YAAmB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAF3C,aAAQ,GAAG,MAAM,CAAC;IAE4B,CAAC;;wEAHpC,YAAY;4FAAZ,YAAY;QDRzB,sEACE;QAAA,yEACE;QAAA,uEAA6B;QAAA,+DAAI;QAAA,4DAAI;QACrC,yEACA;QAAA,wEACE;QAAA,qEAAI;QAAA,uEAAkD;QAAA,iEAAM;QAAA,4DAAI;QAAA,4DAAK;QACrE,qEAAI;QAAA,wEAAmD;QAAA,mEAAO;QAAA,4DAAI;QAAA,4DAAK;QACzE,4DAAK;QACH,yEACK;QAAA,sEAAI;QAAA,sGAA0F;QAAA,4DAAK;QACxG,sEAAI;QAAA,sGAAgG;QAAA,4DAAK;QACvG,sEAAI;QAAA,sGAA+E;QAAA,4DAAK;QAC1F,4DAAK;QAAA,4DAAM;QACf,4DAAM;QACR,4DAAM;QACN,2EACA;QAAA,2EAAwB;QAAA,wDAAc;QAAA,4DAAM;QAC5C,4DAAM;QAEN,2EACA;QAAA,4EAA+B;QAC/B,4DAAM;;QAZa,2DAA6B;QAA7B,6FAA6B;QAClC,0DAA6B;QAA7B,6FAA6B;QAC3B,0DAA4B;QAA5B,4FAA4B;QAKpB,0DAAc;QAAd,6EAAc;;;;;;;;;;;;;;AEdtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;;;;;;ICDvD,yEACE;IAAA,yEACE;IAAA,yEACE;IAAA,0EAAyB;IAAA,uDAAiB;IAAA,4DAAO;IACjD,oEACA;IAAA,0EAAuB;IAAA,uDAAiB;IAAA,4DAAO;IACvD,4DAAM;IACA,yEACE;IAAA,0EACE;IAAA,wDACF;;IAAA,4DAAO;IACP,yEAAuD;IAAA,qEAAS;IAAA,4DAAI;IACtE,4DAAM;IACR,4DAAM;IACR,4DAAM;;;IAXyB,0DAAiB;IAAjB,+EAAiB;IACD,0DAAyB;IAAzB,yJAAyB;IAC3C,0DAAiB;IAAjB,+EAAiB;IAItC,0DACF;IADE,8KACF;;ADDD,MAAM,gBAAgB;IAS3B,YAAoB,YAA0B,EAAU,MAAc;QAAlD,iBAAY,GAAZ,YAAY,CAAc;QAAU,WAAM,GAAN,MAAM,CAAQ;QARtE,kBAAa,GAAG;YACd;gBACE,KAAK,EAAE,EAAE;gBACT,KAAK,EAAE,EAAE;gBACT,UAAU,EAAE,EAAE;gBACd,OAAO,EAAE,EAAE;aACZ;SACF,CAAC;IACuE,CAAC;IAE1E,QAAQ;QACN,IAAI,CAAC,YAAY,CAAC,gBAAgB,EAAE,CAAC,SAAS,CAC5C,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,GAAG,GAAG,CAAC,EACnC,CAAC,GAAG,EAAE,EAAE;YACN,IAAI,GAAG,YAAY,sEAAiB,EAAE;gBACpC,IAAI,GAAG,CAAC,MAAM,KAAK,GAAG,EAAE;oBACtB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;iBAClC;aACF;QACH,CAAC,CACF,CAAC;IACJ,CAAC;;gFAtBU,gBAAgB;gGAAhB,gBAAgB;QCV7B,yEACE;QAAA,6GAcM;QACR,4DAAM;;QAfyC,0DAAgB;QAAhB,sFAAgB;;;;;;;;;;;;;;ACA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AAEF;AACT;AACmB;AACT;AACG;AACf;AAC8B;AAE9B;AACE;AACgB;AACtB;AAC6B;;AAuB/D,MAAM,SAAS;;yFAAT,SAAS,cAFR,2DAAY;6IAEb,SAAS,mBAZT;QACT,yDAAW;QACX,2DAAY;QACZ,sDAAS;QACT;YACE,OAAO,EAAE,sEAAiB;YAC1B,QAAQ,EAAE,mFAAuB;YACjC,KAAK,EAAE,IAAI;SACZ;KACF,YAVQ,CAAC,uEAAa,EAAE,0DAAW,EAAE,qEAAgB,EAAE,oEAAgB,CAAC;oIAa9D,SAAS,mBAnBlB,2DAAY;QACZ,8EAAiB;QACjB,qEAAc;QACd,wEAAe;QACf,4EAAgB,aAER,uEAAa,EAAE,0DAAW,EAAE,qEAAgB,EAAE,oEAAgB;;;;;;;;;;;;;;;;;;;;;ACpBnE,MAAM,WAAW;IAItB,YAAoB,IAAgB,EAAU,MAAc;QAAxC,SAAI,GAAJ,IAAI,CAAY;QAAU,WAAM,GAAN,MAAM,CAAQ;QAHpD,gBAAW,GAAG,oCAAoC,CAAC;QACnD,aAAQ,GAAG,iCAAiC,CAAC;IAEU,CAAC;IAEhE,YAAY,CAAC,IAAS;QACpB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;IAChD,CAAC;IAED,SAAS,CAAC,IAAS;QACjB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;IAC7C,CAAC;IAED,QAAQ;QACN,OAAO,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;IACzC,CAAC;IAED,UAAU;QACR,YAAY,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;QACjC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;IACpC,CAAC;IAED,QAAQ;QACN,OAAO,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;IACvC,CAAC;;sEAzBU,WAAW;8FAAX,WAAW,WAAX,WAAW;;;;;;;;;;;;;;;;;;;;;ACEjB,MAAM,SAAS;IACpB,YAAoB,IAAiB,EAAU,MAAc;QAAzC,SAAI,GAAJ,IAAI,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;IAAG,CAAC;IAEjE,WAAW;QACT,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE;YACxB,OAAO,IAAI,CAAC;SACb;aAAM;YACL,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YACjC,OAAO,KAAK,CAAC;SACd;IACH,CAAC;;kEAVU,SAAS;4FAAT,SAAS,WAAT,SAAS,mBAFR,MAAM;;;;;;;;;;;;;ACJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACW;AACT;AACG;AACG;AACtB;;;AAEzC,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,UAAU,EAAE,SAAS;QACrB,SAAS,EAAE,MAAM;KAClB;IACD;QACE,IAAI,EAAE,SAAS;QACf,SAAS,EAAE,2EAAgB;QAC3B,WAAW,EAAE,CAAC,qDAAS,CAAC;KACzB;IACD;QACE,IAAI,EAAE,QAAQ;QACd,SAAS,EAAE,wEAAe;KAC3B;IACD;QACE,IAAI,EAAE,UAAU;QAChB,SAAS,EAAE,8EAAiB;KAC7B;IACD;QACE,IAAI,EAAE,OAAO;QACb,SAAS,EAAE,qEAAc;KAC1B;CACF,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;;;;;;;;;;;;;;;;;;;;;;;AC1BjB,MAAM,cAAc;IAQzB,YAAoB,IAAiB,EAAU,MAAc;QAAzC,SAAI,GAAJ,IAAI,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QAP7D,kBAAa,GAAG,qDAAqD,CAAC;QACtE,eAAU,GAAG,OAAO,CAAC;QAErB,kBAAa,GAAG;YACd,KAAK,EAAE,EAAE;YACT,QAAQ,EAAE,EAAE;SACb,CAAC;IAC8D,CAAC;IAEjE,QAAQ,KAAU,CAAC;IAEnB,SAAS;QACP,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,SAAS,CAC/C,CAAC,GAAQ,EAAE,EAAE;YACX,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,YAAY,CAAC,OAAO,CAAC,OAAO,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC;YACzC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;QACrC,CAAC,EACD,CAAC,GAAW,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAClC,CAAC;IACJ,CAAC;;4EArBU,cAAc;8FAAd,cAAc;QCT3B,yEACE;QAAA,uDACF;QAAA,4DAAM;QACN,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,0EAAmD;QAAA,uDAEjD;QAAA,4DAAO;QACT,0EACE;QAAA,yEACE;QAAA,0EACE;QAAA,4EAQA;QAPE,gMAAiC;QADnC,4DAQA;QAAA,4EAAmB;QAAA,iEAAK;QAAA,4DAAQ;QAClC,4DAAM;QACR,4DAAM;QACN,0EACE;QAAA,0EACE;QAAA,6EAQA;QAPE,mMAAoC;QADtC,4DAQA;QAAA,6EAAsB;QAAA,oEAAQ;QAAA,4DAAQ;QACxC,4DAAM;QACR,4DAAM;QACR,4DAAO;QACT,4DAAM;QACN,2EACE;QAAA,8EAKE;QAJA,uIAAS,eAAW,IAAC;QAIrB,mEACF;QAAA,4DAAS;QACX,4DAAM;QACR,4DAAM;QACR,4DAAM;QAEN,0EACE;QAAA,2EACE;QAAA,2EACE;QAAA,0EACE;QAAA,4EAAyB;QAAA,2EAAe;QAAA,4DAAO;QAC/C,sEACE;QAAA,sEAAI;QAAA,4EAAgB;QAAA,4DAAK;QACzB,sEAAI;QAAA,8FAAkC;QAAA,4DAAK;QAC3C,sEAAI;QAAA,0EAAc;QAAA,4DAAK;QACvB,sEAAI;QAAA,2EAAe;QAAA,4DAAK;QAC1B,4DAAK;QACP,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;;QAjEJ,0DACF;QADE,8FACF;QAK2D,0DAEjD;QAFiD,+EAEjD;QAKM,0DAAiC;QAAjC,4FAAiC;QAajC,0DAAoC;QAApC,+FAAoC;;;;;;;;;;;;;;;;;;;;AC3BL;AAGF;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss'],\n})\nexport class RegisterComponent implements OnInit {\n  registerTitle = 'Register';\n  registerUserData = {\n    name: '',\n    email: '',\n    password: '',\n  };\n  constructor(private auth: AuthService, private router: Router) {}\n\n  ngOnInit(): void {}\n\n  registerUser(): void {\n    this.auth.registerUser(this.registerUserData).subscribe(\n      (res: any) => {\n        console.log(res + 'registerUser log');\n        localStorage.setItem('token', res.token);\n        this.router.navigate(['/special']);\n      },\n      (err: string) => console.log(err)\n    );\n  }\n}\n","<div class=\"row\">\n  <div class=\"col s12 m8 l6\">\n    <div class=\"card hoverable\">\n      <div class=\"card-content\">\n        <span class=\"card-title card-title__register-form\">{{registerTitle}}</span>\n        <form class=\"form\">\n        <div class=\"row\">\n          <div class=\"input-field col s12\">\n            <input [(ngModel)]=\"registerUserData.name\" name=\"name\" id=\"name\" type=\"text\" class=\"validate\"\n                   autocomplete=\"on\">\n            <label for=\"name\">Name</label>\n          </div></div>\n          <div class=\"row\">\n            <div class=\"input-field col s12\">\n              <input [(ngModel)]=\"registerUserData.email\" name=\"email\" id=\"email\" type=\"email\" class=\"validate\"\n                     autocomplete=\"on\">\n              <label for=\"email\">Email</label>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"input-field col s12\">\n              <input [(ngModel)]=\"registerUserData.password\" name=\"password\" id=\"password\" type=\"password\"\n                     class=\"validate\" autocomplete=\"off\">\n              <label for=\"password\">Password</label>\n            </div>\n          </div>\n        </form>\n              </div>\n      <div class=\"card-action\">\n        <button (click)=\"registerUser()\" class=\"btn waves-effect waves-light\" type=\"button\">Submit\n        </button>\n      </div>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col s12 l4 right\">\n      <div class=\"card card-light\">\n        <div class=\"card-content\">\n          <span class=\"card-title\">What Do We Have</span>\n          <ul>\n            <li>Email & Password validation</li>\n            <li>Checking for email in the database</li>\n            <li>Password token</li>\n            <li>Salted password</li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","<div class=\"row\">\n  <div class=\"col s12 m4 l6\" *ngFor=\"let event of events\">\n    <div class=\"card hoverable\">\n      <div class=\"card-content center-align\">\n        <span class=\"card-title\">{{ event.title }}</span>\n        <span>{{ event.about }}</span>\n\n      <span class=\"badge\" data-badge-caption=\"in stock\">\n        {{ event.registered | date: 'shortDate' }}\n      </span></div>\n      <div class=\"card-action\">\n        <a href=\"#\" class=\"btn waves-effect waves-light\">More</a>\n\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { EventService } from '../event.service';\n\n@Component({\n  selector: 'app-events',\n  templateUrl: './events.component.html',\n  styleUrls: ['./events.component.scss'],\n})\nexport class EventsComponent implements OnInit {\n  events = [\n    {\n      title: '',\n      about: '',\n      registered: '',\n    },\n  ];\n  constructor(private eventService: EventService) {}\n\n  ngOnInit(): void {\n    this.eventService.getEvents().subscribe(\n      (res) => (this.events = res),\n      (err) => console.log(err)\n    );\n  }\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { HttpInterceptor } from '@angular/common/http';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TokenInterceptorService implements HttpInterceptor {\n  constructor(private injector: Injector) {}\n\n  intercept(\n    req: { clone: (arg0: { setHeaders: { Authorization: string } }) => any },\n    next: { handle: (arg0: any) => any }\n  ) {\n    const AUTH_SERVICE = this.injector.get(AuthService);\n    const TOKENIZED_REQ = req.clone({\n      setHeaders: {\n        Authorization: `Bearer ${AUTH_SERVICE.getToken()}`,\n      },\n    });\n    return next.handle(TOKENIZED_REQ);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable()\nexport class EventService {\n  private eventUrl = 'http://localhost:3000/api/events';\n  private specialEventsUrl = 'http://localhost:3000/api/special';\n  constructor(private http: HttpClient) {}\n\n  getEvents() {\n    return this.http.get<any>(this.eventUrl);\n  }\n\n  getSpecialEvents() {\n    return this.http.get<any>(this.specialEventsUrl);\n  }\n}\n","<nav>\n  <div class=\"nav-wrapper\">\n    <a href=# class=\"brand-logo\">Site</a>\n    <div class=\"nav-container\">\n    <ul class=\"left hide-on-med-and-down\">\n      <li><a routerLink=\"/events\" routerLinkActive=\"active\">Events</a></li>\n      <li><a routerLink=\"/special\" routerLinkActive=\"active\">Special</a></li>\n    </ul>\n      <ul class=\"right hide-on-med-and-down\">\n           <li><a *ngIf=\"!authService.loggedIn()\" routerLink=\"/login\" routerLinkActive=\"active\">Login</a></li>\n      <li><a *ngIf=\"!authService.loggedIn()\" routerLink=\"/register\" routerLinkActive=\"active\">Register</a></li>\n        <li><a *ngIf=\"authService.loggedIn()\" (click)=\"authService.logoutUser()\">Logout</a></li>\n      </ul></div>\n  </div>\n</nav>\n<div class=\"container\">\n<div class=\"main-title\">{{ appTitle }}</div>\n</div>\n\n<div class=\"container\">\n<router-outlet></router-outlet>\n</div>\n","import { Component } from '@angular/core';\nimport { AuthService } from './auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  appTitle = 'TEST';\n\n  constructor(public authService: AuthService) {}\n\n  // changeTitle(): void {\n  //   this.appTitle = 'PROD';\n  //   if (this.authService.getToken()) {\n  //     this.appTitle = 'LOGIN';\n  //   }\n  // }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { EventService } from '../event.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-special',\n  templateUrl: './special.component.html',\n  styleUrls: ['./special.component.scss'],\n})\nexport class SpecialComponent implements OnInit {\n  specialEvents = [\n    {\n      title: '',\n      about: '',\n      registered: '',\n      picture: '',\n    },\n  ];\n  constructor(private eventService: EventService, private router: Router) {}\n\n  ngOnInit(): void {\n    this.eventService.getSpecialEvents().subscribe(\n      (res) => (this.specialEvents = res),\n      (err) => {\n        if (err instanceof HttpErrorResponse) {\n          if (err.status === 401) {\n            this.router.navigate(['/login']);\n          }\n        }\n      }\n    );\n  }\n}\n","<div class=\"row\">\n  <div class=\"col s12 m6 l4\" *ngFor=\"let event of specialEvents\">\n    <div class=\"card hoverable\">\n      <div class=\"card-content\">\n        <span class=\"card-title\">{{ event.title }}</span>\n        <img class=\"circle responsive-img block\" src=\"{{ event.picture }}\" alt=\"\">\n        <span class=\"truncate\">{{ event.about }}</span>\n</div>\n      <div class=\"card-action\">\n        <span class=\"badge truncate\" data-badge-caption=\"in stock\">\n          {{ event.registered | date: \"shortDate\" }}\n        </span>\n        <a href=\"#\" class=\"btn-small waves-effect waves-light\">See more </a>\n      </div>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { RegisterComponent } from './register/register.component';\nimport { LoginComponent } from './login/login.component';\nimport { EventsComponent } from './events/events.component';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { AuthService } from './auth.service';\nimport { EventService } from './event.service';\nimport { SpecialComponent } from './special/special.component';\nimport { AuthGuard } from './auth.guard';\nimport { TokenInterceptorService } from './token-interceptor.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RegisterComponent,\n    LoginComponent,\n    EventsComponent,\n    SpecialComponent,\n  ],\n  imports: [BrowserModule, FormsModule, HttpClientModule, AppRoutingModule],\n  providers: [\n    AuthService,\n    EventService,\n    AuthGuard,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptorService,\n      multi: true,\n    },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Injectable()\nexport class AuthService {\n  private registerUrl = 'http://localhost:3000/api/register';\n  private loginUrl = 'http://localhost:3000/api/login';\n\n  constructor(private http: HttpClient, private router: Router) {}\n\n  registerUser(user: any): any {\n    return this.http.post(this.registerUrl, user);\n  }\n\n  loginUser(user: any): any {\n    return this.http.post(this.loginUrl, user);\n  }\n\n  loggedIn(): any {\n    return !!localStorage.getItem('token');\n  }\n\n  logoutUser(): any {\n    localStorage.removeItem('token');\n    this.router.navigate(['/events']);\n  }\n\n  getToken(): any {\n    return localStorage.getItem('token');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private auth: AuthService, private router: Router) {}\n\n  canActivate(): boolean {\n    if (this.auth.loggedIn()) {\n      return true;\n    } else {\n      this.router.navigate(['/login']);\n      return false;\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { RegisterComponent } from './register/register.component';\nimport { LoginComponent } from './login/login.component';\nimport { EventsComponent } from './events/events.component';\nimport { SpecialComponent } from './special/special.component';\nimport { AuthGuard } from './auth.guard';\n\nconst ROUTES: Routes = [\n  {\n    path: '',\n    redirectTo: '/events',\n    pathMatch: 'full',\n  },\n  {\n    path: 'special',\n    component: SpecialComponent,\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'events',\n    component: EventsComponent,\n  },\n  {\n    path: 'register',\n    component: RegisterComponent,\n  },\n  {\n    path: 'login',\n    component: LoginComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(ROUTES)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n  appLoginTitle = 'Tab Special is only available for registered users ';\n  loginTitle = 'Login';\n\n  loginUserData = {\n    email: '',\n    password: '',\n  };\n  constructor(private auth: AuthService, private router: Router) {}\n\n  ngOnInit(): void {}\n\n  loginUser(): void {\n    this.auth.loginUser(this.loginUserData).subscribe(\n      (res: any) => {\n        console.log(res);\n        localStorage.setItem('token', res.token);\n        this.router.navigate(['/special']);\n      },\n      (err: string) => console.log(err)\n    );\n  }\n}\n","<div class=\"login-component\">\n  {{ appLoginTitle }}\n</div>\n<div class=\"row\">\n  <div class=\"col s12 l6\">\n    <div class=\"card hoverable\">\n      <div class=\"card-content\">\n        <span class=\"card-title card-title__register-form\">{{\n          loginTitle\n        }}</span>\n        <form class=\"form\">\n          <div class=\"row\">\n            <div class=\"input-field col s12\">\n              <input\n                [(ngModel)]=\"loginUserData.email\"\n                name=\"email\"\n                id=\"email\"\n                type=\"email\"\n                class=\"validate\"\n                autocomplete=\"off\"\n              />\n              <label for=\"email\">Email</label>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"input-field col s12\">\n              <input\n                [(ngModel)]=\"loginUserData.password\"\n                name=\"password\"\n                id=\"password\"\n                type=\"password\"\n                class=\"validate\"\n                autocomplete=\"off\"\n              />\n              <label for=\"password\">Password</label>\n            </div>\n          </div>\n        </form>\n      </div>\n      <div class=\"card-action\">\n        <button\n          (click)=\"loginUser()\"\n          class=\"btn waves-effect waves-light green\"\n          type=\"button\"\n        >\n          Login\n        </button>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col s12 l4 right\">\n      <div class=\"card card-light\">\n        <div class=\"card-content\">\n          <span class=\"card-title\">What Do We Have</span>\n          <ul>\n            <li>Email validation</li>\n            <li>Checking for email in the database</li>\n            <li>Password token</li>\n            <li>Salted password</li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}